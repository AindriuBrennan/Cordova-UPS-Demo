"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var AbstractPushRegistration_1 = require("../AbstractPushRegistration");
var Bowser = __importStar(require("bowser"));
var DEFAULT_SERVICE_WORKER = "/service-worker.js";
/**
 * AeroGear UPS registration SDK - Webpush implementation
 *
 * Usage:
 * // Initialize SDK first
 * app.init(config);
 * let registration = new PushRegistration();
 * registration.register("myAppleOrFirebaseToken");
 */
var PushRegistrationWebpushImpl = /** @class */ (function (_super) {
    __extends(PushRegistrationWebpushImpl, _super);
    function PushRegistrationWebpushImpl(config) {
        return _super.call(this, config) || this;
        // The config is valid
    }
    PushRegistrationWebpushImpl.onMessageReceived = function (onMessageReceivedCallback) {
        PushRegistrationWebpushImpl.onMessageReceivedCallback = onMessageReceivedCallback;
    };
    PushRegistrationWebpushImpl.prototype.register = function (options) {
        if (options === void 0) { options = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var alias, categories, serviceWorker, subscription, userAgent, postData, storage;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        alias = options.alias, categories = options.categories, serviceWorker = options.serviceWorker;
                        if (this.validationError) {
                            throw new Error(this.validationError);
                        }
                        if (!this.httpClient) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.subscribeToWebPush(this.platformConfig.appServerKey, serviceWorker)];
                    case 1:
                        subscription = _a.sent();
                        userAgent = Bowser.parse(window.navigator.userAgent);
                        postData = {
                            "deviceToken": window.btoa(JSON.stringify(subscription)),
                            "deviceType": userAgent.browser.name,
                            "operatingSystem": userAgent.os.name,
                            "osVersion": userAgent.os.version,
                            "alias": alias,
                            "categories": categories
                        };
                        return [4 /*yield*/, this.httpClient.post(AbstractPushRegistration_1.AbstractPushRegistration.API_PATH, postData)];
                    case 2:
                        _a.sent();
                        storage = window.localStorage;
                        storage.setItem(AbstractPushRegistration_1.AbstractPushRegistration.REGISTRATION_DATA_KEY, JSON.stringify(postData));
                        navigator.serviceWorker.onmessage = function (event) {
                            if (PushRegistrationWebpushImpl.onMessageReceivedCallback) {
                                PushRegistrationWebpushImpl.onMessageReceivedCallback(event.data);
                            }
                        };
                        return [3 /*break*/, 4];
                    case 3: 
                    // It should never happend but...
                    throw new Error("Push is not properly configured");
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    PushRegistrationWebpushImpl.prototype.unregister = function () {
        return __awaiter(this, void 0, void 0, function () {
            var registrations, _i, registrations_1, registration;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, _super.prototype.unregister.call(this)];
                    case 1:
                        _a.sent();
                        if (!("serviceWorker" in navigator)) return [3 /*break*/, 6];
                        return [4 /*yield*/, navigator.serviceWorker.getRegistrations()];
                    case 2:
                        registrations = _a.sent();
                        _i = 0, registrations_1 = registrations;
                        _a.label = 3;
                    case 3:
                        if (!(_i < registrations_1.length)) return [3 /*break*/, 6];
                        registration = registrations_1[_i];
                        return [4 /*yield*/, registration.unregister()];
                    case 4:
                        _a.sent();
                        _a.label = 5;
                    case 5:
                        _i++;
                        return [3 /*break*/, 3];
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    PushRegistrationWebpushImpl.prototype.getPlatformConfig = function (pushConfig) {
        return pushConfig.webpush;
    };
    PushRegistrationWebpushImpl.prototype.validateConfig = function (pushConfig) {
        var config = this.getPlatformConfig(pushConfig);
        if (!config || !config.appServerKey) {
            return "No appServerKey found in service configuration";
        }
    };
    PushRegistrationWebpushImpl.prototype.waitForServiceWorkerToBeReady = function (reg) {
        var serviceWorker;
        if (reg.installing) {
            serviceWorker = reg.installing;
        }
        else if (reg.waiting) {
            serviceWorker = reg.waiting;
        }
        else if (reg.active) {
            serviceWorker = reg.active;
        }
        return new Promise(function (resolve) {
            if (serviceWorker) {
                if (serviceWorker.state === "activated") {
                    resolve(reg);
                }
                serviceWorker.addEventListener("statechange", function (e) {
                    if (e.target.state === "activated") {
                        resolve(reg);
                    }
                });
            }
        });
    };
    PushRegistrationWebpushImpl.prototype.subscribeToWebPush = function (appServerKey, serviceWorker) {
        if (serviceWorker === void 0) { serviceWorker = DEFAULT_SERVICE_WORKER; }
        return __awaiter(this, void 0, void 0, function () {
            var permission, registration, subscribeOptions, pushSubscription;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!("serviceWorker" in navigator && "PushManager" in window)) return [3 /*break*/, 5];
                        return [4 /*yield*/, window.Notification.requestPermission()];
                    case 1:
                        permission = _a.sent();
                        if (permission !== "granted") {
                            throw new Error("Unable to subscribe to WebPush: no permissions");
                        }
                        return [4 /*yield*/, navigator.serviceWorker.register(serviceWorker)];
                    case 2:
                        registration = _a.sent();
                        return [4 /*yield*/, this.waitForServiceWorkerToBeReady(registration)];
                    case 3:
                        registration = _a.sent();
                        subscribeOptions = {
                            userVisibleOnly: true,
                            applicationServerKey: urlBase64ToUint8Array(appServerKey)
                        };
                        return [4 /*yield*/, registration.pushManager.subscribe(subscribeOptions)];
                    case 4:
                        pushSubscription = _a.sent();
                        return [2 /*return*/, {
                                endpoint: pushSubscription.endpoint,
                                keys: {
                                    p256dh: btoa(String.fromCharCode.apply(null, Array.from(new Uint8Array(pushSubscription.getKey("p256dh"))))),
                                    auth: btoa(String.fromCharCode.apply(null, Array.from(new Uint8Array(pushSubscription.getKey("auth")))))
                                }
                            }];
                    case 5: throw new Error("Push messages are not supported on the current platform");
                }
            });
        });
    };
    return PushRegistrationWebpushImpl;
}(AbstractPushRegistration_1.AbstractPushRegistration));
exports.PushRegistrationWebpushImpl = PushRegistrationWebpushImpl;
/**
 * urlBase64ToUint8Array
 *
 * @param {string} base64String a public vapid key
 */
function urlBase64ToUint8Array(base64String) {
    var padding = "=".repeat((4 - base64String.length % 4) % 4);
    var base64 = (base64String + padding)
        .replace(/\-/g, "+")
        .replace(/_/g, "/");
    var rawData = window.atob(base64);
    var outputArray = new Uint8Array(rawData.length);
    for (var i = 0; i < rawData.length; ++i) {
        outputArray[i] = rawData.charCodeAt(i);
    }
    return outputArray;
}
//# sourceMappingURL=PushRegistrationWebpushImpl.js.map